version: '3.9'

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  admin:
    build:
      context: .
      dockerfile: Dockerfile.admin
    volumes:
      - ./frontend/data/blog:/app/frontend/data/blog
      - ./admin/static:/app/staticfiles
    environment:
      - DJANGO_STATIC_ROOT=/usr/share/nginx/static
      - PYTHONPATH=/app
    env_file:
      - .env
    ports:
      - "8001:8000"
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    volumes:
      - ./frontend/out:/app/frontend/out
      - ./frontend/data/blog:/app/frontend/data/blog
    ports:
      - "3001:3000"
    environment:
      - NODE_OPTIONS=--max-old-space-size=4096
      - NODE_ENV=production 
      - BLOG_CONTENT_DIR=/app/data/blog
    env_file: 
      - .env
    healthcheck:
      test: ["CMD", "test", "-f", "/app/frontend/out/.ready"]
      interval: 10s
      timeout: 3s
      retries: 60

  ai:
    build:
      context: .
      dockerfile: Dockerfile.ai
    depends_on:
      frontend:
        condition: service_healthy
    ports:
      - "5001:5000"
    volumes:
      - ./frontend/data/blog:/app/frontend/data/blog
      - ./frontend/out:/app/frontend/out
      - ./releases:/usr/share/nginx/releases
    environment:
      - PYTHONPATH=/app
    env_file:
      - .env

  static:
    image: nginx:alpine
    container_name: blognext_static_site
    restart: unless-stopped
    ports:
      - "8081:80"
    volumes:
      - ./html:/usr/share/nginx/html:ro
      - ./releases:/usr/share/nginx/releases:rw
      - ./admin/static:/usr/share/nginx/static:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

volumes:
  pgdata:
